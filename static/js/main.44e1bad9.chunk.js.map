{"version":3,"sources":["Components/ContactForm/ContactForm.js","Components/ContactList/ContactList.js","Components/FilterField/FilterField.js","Components/App.js","index.js","Components/ContactList/ContactList.module.css","Components/ContactForm/ContactForm.module.css","Components/FilterField/FilterField.module.css"],"names":["ContactForm","onSubmit","useState","name","setName","number","setNumber","e","preventDefault","className","s","contactForm","contactForm__label","type","value","onChange","currentTarget","contactForm__input","pattern","title","required","contactForm__btn","ContactList","contacts","onHandleDelete","filteredContactsByInputValue","contactList","map","id","contactList__item","contactList__itemText","deleteBtn","onClick","FilterField","searchQuery","filterField__conteiner","filterField__label","filterField__input","App","setContacts","filter","setFilter","arrNames","contact","includes","alert","uuidv4","prevState","prev","normalizedInputValue","toLowerCase","trim","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.44e1bad9.chunk.js","sourcesContent":["import { useState } from 'react';\nimport s from './ContactForm.module.css';\nimport PropTypes from 'prop-types';\n\nconst ContactForm = ({ onSubmit }) => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const onHandleSubmit = e => {\n    e.preventDefault();\n    onSubmit(name, number);\n    setName('');\n    setNumber('');\n  };\n\n  const onHandleChangeName = e => {\n    setName(e.currentTarget.value);\n  };\n\n  const onHandleChangeNumber = e => {\n    setNumber(e.currentTarget.value);\n  };\n\n  return (\n    <form onSubmit={onHandleSubmit} className={s.contactForm}>\n      <label className={s.contactForm__label}>\n        Name\n        <input\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          onChange={onHandleChangeName}\n          className={s.contactForm__input}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n        />\n      </label>\n      <label className={s.contactForm__label}>\n        Number\n        <input\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          onChange={onHandleChangeNumber}\n          className={s.contactForm__input}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n        />\n      </label>\n      <button type=\"submit\" className={s.contactForm__btn}>\n        Add contact\n      </button>\n    </form>\n  );\n};\n\nContactForm.propTypes = {\n  onSubmit: PropTypes.func,\n};\n\nexport default ContactForm;\n\n// class ContactForm extends Component {\n//   state = {\n//     name: '',\n//     number: '',\n//   };\n\n//   onHandleSubmit = e => {\n//     e.preventDefault();\n//     const { name, number } = this.state;\n//     this.props.onSubmit(name, number);\n//     this.setState({ ...initialState });\n//   };\n\n//   onHandleChange = e => {\n//     this.setState({ [e.currentTarget.name]: e.currentTarget.value });\n//   };\n\n//   render() {\n//     return (\n//       <form onSubmit={this.onHandleSubmit} className={s.contactForm}>\n//         <label className={s.contactForm__label}>\n//           Name\n//           <input\n//             type=\"text\"\n//             name=\"name\"\n//             value={this.state.name}\n//             onChange={this.onHandleChange}\n//             className={s.contactForm__input}\n//             pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n//             title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n//             required\n//           />\n//         </label>\n//         <label className={s.contactForm__label}>\n//           Number\n//           <input\n//             type=\"tel\"\n//             name=\"number\"\n//             value={this.state.number}\n//             onChange={this.onHandleChange}\n//             className={s.contactForm__input}\n//             pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n//             title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n//             required\n//           />\n//         </label>\n//         <button type=\"submit\" className={s.contactForm__btn}>\n//           Add contact\n//         </button>\n//       </form>\n//     );\n//   }\n// }\n\n// ContactForm.propTypes = {\n//   onSubmit: PropTypes.func,\n// };\n\n// export default ContactForm;\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from './ContactList.module.css';\r\n\r\nconst ContactList = ({\r\n  contacts,\r\n  onHandleDelete,\r\n  filteredContactsByInputValue,\r\n}) => {\r\n  return (\r\n    <ul className={s.contactList}>\r\n      {filteredContactsByInputValue\r\n        ? filteredContactsByInputValue.map(({ id, name, number }) => (\r\n            <li key={id} className={s.contactList__item}>\r\n              <p className={s.contactList__itemText}>\r\n                {name}: {number}\r\n              </p>\r\n              <button\r\n                type=\"button\"\r\n                className={s.deleteBtn}\r\n                onClick={() => {\r\n                  onHandleDelete(id);\r\n                }}\r\n              >\r\n                Delete\r\n              </button>\r\n            </li>\r\n          ))\r\n        : contacts.map(({ id, name, number }) => (\r\n            <li key={id} className={s.contactList__item}>\r\n              <p className={s.contactList__itemText}>\r\n                {name}: {number}\r\n              </p>\r\n              <button\r\n                type=\"button\"\r\n                className={s.deleteBtn}\r\n                onClick={() => {\r\n                  onHandleDelete(id);\r\n                }}\r\n              >\r\n                Delete\r\n              </button>\r\n            </li>\r\n          ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.array,\r\n  onHandleDelete: PropTypes.func,\r\n  filteredContactsByInputValue: PropTypes.array,\r\n};\r\n\r\nexport default ContactList;\r\n","import React from 'react';\r\nimport s from './FilterField.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst FilterField = ({ searchQuery, onChange }) => {\r\n  return (\r\n    <div className={s.filterField__conteiner}>\r\n      <label className={s.filterField__label}>\r\n        Find contacts by name\r\n        <input\r\n          type=\"text\"\r\n          name=\"filter\"\r\n          value={searchQuery}\r\n          onChange={onChange}\r\n          className={s.filterField__input}\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          required\r\n        />\r\n      </label>\r\n    </div>\r\n  );\r\n};\r\n\r\nFilterField.propTypes = {\r\n  searchQuery: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func,\r\n};\r\n\r\nexport default FilterField;\r\n","import React, { useState } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport ContactForm from './ContactForm/ContactForm';\nimport ContactList from './ContactList/ContactList';\nimport FilterField from './FilterField/FilterField';\n\nconst App = () => {\n  let [contacts, setContacts] = useState([]);\n  let [filter, setFilter] = useState('');\n\n  const addContact = (name, number) => {\n    const arrNames = contacts.map(contact => contact.name);\n\n    if (!arrNames.includes(name)) {\n      const contact = {\n        id: uuidv4(),\n        name,\n        number,\n      };\n      setContacts(prevState => [...prevState, contact]);\n    } else {\n      alert(`${name} is already in contacts`);\n    }\n  };\n\n  const deleteContact = id =>\n    setContacts(prev => prev.filter(contact => contact.id !== id));\n\n  const onChangeFilter = e => {\n    setFilter(e.currentTarget.value);\n  };\n\n  const filteredContactsByInputValue = () => {\n    const normalizedInputValue = filter.toLowerCase().trim();\n    if (normalizedInputValue !== '') {\n      return contacts.filter(contact =>\n        contact.name.toLowerCase().includes(normalizedInputValue),\n      );\n    }\n  };\n\n  return (\n    <>\n      <h1>Phonebook</h1>\n      <ContactForm onSubmit={addContact} />\n      <h2>Contacts</h2>\n      <FilterField searchQuery={filter} onChange={onChangeFilter} />\n      <ContactList\n        contacts={contacts}\n        onHandleDelete={deleteContact}\n        filteredContactsByInputValue={filteredContactsByInputValue()}\n      />\n    </>\n  );\n};\n\nexport default App;\n\n// class App extends Component {\n//   state = {\n//     contacts: [],\n//     filter: '',\n//   };\n\n//   addContact = (name, number) => {\n//     const arrNames = this.state.contacts.map(contact => contact.name);\n\n//     if (!arrNames.includes(name)) {\n//       const contact = {\n//         id: uuidv4(),\n//         name,\n//         number,\n//       };\n//       this.setState({\n//         contacts: [...this.state.contacts, contact],\n//       });\n//     } else {\n//       alert(`${name} is already in contacts`);\n//     }\n//   };\n\n//   deleteContact = id =>\n//     this.setState(prev => ({\n//       contacts: prev.contacts.filter(contact => contact.id !== id),\n//     }));\n\n//   onChangeFilter = e => {\n//     this.setState({ filter: e.currentTarget.value });\n//   };\n\n//   filteredContactsByInputValue = () => {\n//     const { contacts, filter } = this.state;\n//     const normalizedInputValue = filter.toLowerCase().trim();\n//     if (normalizedInputValue !== '') {\n//       return contacts.filter(contact =>\n//         contact.name.toLowerCase().includes(normalizedInputValue),\n//       );\n//     }\n//   };\n\n//   componentDidMount() {\n//     const savedContacts = localStorage.getItem('contacts');\n//     const parsedSavedContacts = JSON.parse(savedContacts);\n//     if (parsedSavedContacts) {\n//       this.setState({ contacts: parsedSavedContacts });\n//     }\n//   }\n\n//   componentDidUpdate(prevState) {\n//     if (this.state.contacts !== prevState.contacts) {\n//       localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\n//     }\n//   }\n\n//   render() {\n//     const {\n//       addContact,\n//       onChangeFilter,\n//       deleteContact,\n//       filteredContactsByInputValue,\n//     } = this;\n//     return (\n//       <>\n//         <h1>Phonebook</h1>\n//         <ContactForm onSubmit={addContact} />\n//         <h2>Contacts</h2>\n//         <FilterField\n//           searchQuery={this.state.filter}\n//           onChange={onChangeFilter}\n//         />\n//         <ContactList\n//           contacts={this.state.contacts}\n//           onHandleDelete={deleteContact}\n//           filteredContactsByInputValue={filteredContactsByInputValue()}\n//         />\n//       </>\n//     );\n//   }\n// }\n\n// export default App;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './Components/App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"deleteBtn\":\"ContactList_deleteBtn__1Kszh\",\"contactList\":\"ContactList_contactList__37Mrk\",\"contactList__item\":\"ContactList_contactList__item__ax9EK\",\"contactList__itemText\":\"ContactList_contactList__itemText__2bxYe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactForm\":\"ContactForm_contactForm__3Pvwe\",\"contactForm__label\":\"ContactForm_contactForm__label__3V_VI\",\"contactForm__input\":\"ContactForm_contactForm__input__3yrEL\",\"contactForm__btn\":\"ContactForm_contactForm__btn__1XZdE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterField__conteiner\":\"FilterField_filterField__conteiner__3ekub\",\"filterField__label\":\"FilterField_filterField__label__2Sxnh\",\"filterField__input\":\"FilterField_filterField__input__2Vxyd\"};"],"sourceRoot":""}